import reflex as rx


def make_imagebox(
    img_path: str, img_kwargs: dict = None, fade_in: bool = False, style: dict = {}
) -> rx.Component:
    """Helper function that creates a general box component for an image.
    Images contained within the box generated by this function
    will share the same formatting to have a general consistency across
    the site. Optionally these defaults can be overriden using the img_kwargs
    argument.

    Parameters
    ----------
    img_path : str
        path to your image. This assumes images are stored in assets/
    img_kwargs : dict, optional
        override default image styles used by this function, by default None
    fade_in : bool, optional
        adds animation to fade-in headings when the page loads, by default False
    style : dict, optional
       Overrides the default style, by default {}


    Returns
    -------
    rx.Component
        A basic box component that contains and image
    """
    if not img_kwargs:
        img_kwargs = dict(
            border_radius="1em", align="center", margin="1em", width="90%"
        )

    if fade_in:
        style["@keyframes fadeIn"] = {
            "0%": {"opacity": 0, "transform": "translateY(30px)"},
            "100%": {"opacity": 1, "transform": "translateY(0)"},
        }
        img_kwargs["style"] = style
        img_kwargs["animation"] = "fadeIn 1s ease-in"

    return rx.box(
        rx.image(img_path, **img_kwargs),
        width="60%",
    )
